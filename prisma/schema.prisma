// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  image         String?
  password      String?
  role          Role      @default(USER)
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  shortUrls     ShortUrl[]
  sessions      Session[]
  accounts      Account[]
  VerificationToken VerificationToken[]
}

model ShortUrl {
  id               String    @id @default(cuid())
  shortCode        String    @unique
  originalUrl      String
  customCode       String?
  title            String?
  description      String?
  isActive         Boolean   @default(true)
  expiresAt        DateTime?
  clickCount       Int       @default(0)
  uniqueClickCount Int       @default(0)
  
  createdBy        String?
  user             User?     @relation(fields: [createdBy], references: [id])
  clicks           Click[]
  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  @@index([shortCode])
  @@index([createdBy])
}

model Click {
  id          String    @id @default(cuid())
  shortUrlId  String
  userAgent   String?
  ipAddress   String
  country     String?
  city        String?
  referrer    String?
  clickedAt   DateTime  @default(now())
  
  shortUrl    ShortUrl  @relation(fields: [shortUrlId], references: [id], onDelete: Cascade)
  
  @@index([shortUrlId])
  @@index([clickedAt])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  sessionToken String   @unique
  accessToken  String   @unique
  expires      DateTime
  
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

enum Role {
  USER
  ADMIN
}
